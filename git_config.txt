生成ssh key 

ssh-keygen -t rsa -C "3517656619@qq.com"


git config --global user.name "wuyanfa"
git config --global user.email "3517656619@qq.com"


ssh-keygen -t rsa -C "wuyanfa88@163.com" -f ~/.ssh/company_key

git config --global user.name "wuyanfa"
git config --global user.email "wuyanfa88@163.com"

配置ssh-key config  touch config
# 配置文件参数
# Host : Host可以看作是一个你要识别的模式，对识别的模式，进行配置对应的的主机名和ssh文件
# HostName : 要登录主机的主机名
# User : 登录名
# IdentityFile : 指明上面User对应的identityFile路径

Host  github.com
HostName  github.com
User  wuyanfa
IdentityFile  ~/.ssh/company_key

Host  114.215.18.195
HostName  github
User  wuyanfa
IdentityFile  ~/.ssh/id_rsa




查看配置
git config --list

推送文件
git push origin master


1. git status（查看本地分支文件信息，确保更新时不产生冲突）

2. git checkout -- [file name] （若文件有修改，可以还原到最初状态; 若文件需要更新到服务器上，应该先merge到服务器，再更新到本地）

3. git branch（查看当前分支情况）

4. git checkout [remote branch](若分支为本地分支，则需切换到服务器的远程分支)

5. git pull

6. git log --pretty=online  命令显示从最近到最远的提交日志

7. git reset --hard HEAD  用HEAD表示当前版本, 上一个版本就是HEAD^ , 上上一个版本就是HEAD^^

8. git checkout -- file 可以丢弃工作区的修改

9. git checkout -b dev 首先，我们创建dev分支，然后切换到dev分支

10.git checkout master 可以切换回master分支

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

11. git log --graph --pretty=oneline --abbrev-commit 我们用git log看看分支历史

12. git remote 查看远程库的信息 , git remote -v 显示更详细的信息

13. 让Git显示颜色 git config --global color.ui true

14. vim .gitignore ,然后执行如下命令 touch .gitignore

删除文件

1. git rm  我的文件 ， git rm -r 删除文件夹

